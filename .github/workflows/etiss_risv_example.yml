name: Build ETISS

on:
  repository_dispatch:
    types: [ seal5-event]

env:
  BUILD_TYPE: Release
  SEAL5_PREBUILT_DIR: ${{ github.workspace }}/../seal5_built
  ETISS_PREBUILT_DIR: ${{ github.workspace }}/../etiss_prebuilt
  RISCV_GCC_PREFIX: ${{ github.workspace }}/../gnu
  RISCV_GCC_NAME: riscv32-unknown-elf
  ARCH: rv32imc_xs4emac
  ETISS_ARCH: RV32IMCXS4EMAC
  PROG: s4emac
  ABI: ilp32
  
jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
         ref: s4emac
         submodules: recursive
         
    - name: Download Pre-built ETISS Artifact
      uses: actions/download-artifact@v4
      with:
        name: etiss_prebuilt
        github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
        path: ../etiss_prebuilt
        repository: bkebianyor/etiss_wysiwyng
        run-id: 10806737972

    - name: Download Cached Seal5 Binaries
      id: cache-seal5
      uses: actions/cache@v4
      env:
        cache-name: cache-seal5-binaries
      with:
        path: ../seal5_prebuilt
        key: seal5-binaries-${{ steps.date.outputs.date }}
        restore-keys: |
          seal5-binaries-
        

    - if: ${{ steps.cache-seal5.outputs.cache-hit != 'true'  &&  github.event_name == 'repository_dispatch' }} 
      name: Download Seal5 Pre-built
      uses: actions/download-artifact@v4
      with:
        name: demo-install
        github-token: ${{ secrets.REPO_ACCESS_TOKEN }}   
        repository: bkebianyor/seal5
        path: ../seal5_prebuilt
        run-id: 10631506372
        
    - name: Download Cached GCC Binaries
      id: cache-gcc
      uses: actions/cache@v4
      env:
        cache-name: cache-gcc-binaries
      with:
        path: ../gnu
        key: gcc-binaries-${{ steps.date.outputs.date }}
        restore-keys: |
          gcc-binaries-
            
    - if: ${{ steps.cache-gcc.outputs.cache-hit != 'true' }}       
      name: Download RISCV-GNU-Toolchain   
      run: |
         pwd
         ls -al
         cd ..
         wget https://syncandshare.lrz.de/dl/fi2p5Ds5PHktjmZGKzR9tx/GCC/default/2023.09.27/Ubuntu/22.04/rv32imc_ilp32.tar.xz
         tar xvf rv32imc_ilp32.tar.xz
         rm rv32imc_ilp32.tar.xz
    
    - name: Build ETISS RISCV Examples for Testing
      run: |
        sudo apt -qq install -y build-essential make clang g++ git cmake libboost-system-dev libboost-filesystem-dev libboost-program-options-dev
        export PATH=$RISCV_GCC_PREFIX/bin/:$SEAL5_PREBUILT_DIR/bin/:$PATH 
        chmod +x $SEAL5_PREBUILT_DIR/bin/*
        ls -al
        ls -al ..
        pwd
        cd ${{ github.workspace }}
        pwd
        mkdir build && cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=rv32gc-llvm-toolchain.cmake -DRISCV_TOOLCHAIN_PREFIX=$RISCV_GCC_PREFIX -DCMAKE_INSTALL_PREFIX=../install -DRISCV_ARCH=$ARCH -DRISCV_ABI=$ABI -DRISCV_TOOLCHAIN_PREFIX=$RISCV_GCC_PREFIX -DRISCV_TOOLCHAIN_BASENAME=$RISCV_GCC_NAME ..
        make -j$(nproc) install    
        make install
    - name: Run ETISS Default Configuration Test
      run: |
        echo "Finished"
        pwd
        chmod +x etiss_prebuilt/bin/bare_etiss_processor
        ls -al etiss_riscv_examples/install/ini/
        ./etiss_prebuilt/bin/bare_etiss_processor -ietiss_riscv_examples/install/ini/s4emac.ini --arch.cpu=$ETISS_ARCH
